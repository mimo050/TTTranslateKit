name: build

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-13
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Cache Theos
        id: cache-theos
        uses: actions/cache@v4
        with:
          path: $HOME/theos
          key: theos-${{ runner.os }}-${{ hashFiles('.github/workflows/build.yml') }}

      - name: Install Theos
        if: steps.cache-theos.outputs.cache-hit != 'true'
        run: git clone --recursive https://github.com/theos/theos.git $HOME/theos

      - name: Setup environment
        run: |
          echo "THEOS=$HOME/theos" >> $GITHUB_ENV
          echo "PATH=$HOME/theos/bin:$PATH" >> $GITHUB_ENV
          SDK_PATH=$(xcrun --sdk iphoneos --show-sdk-path)
          mkdir -p "$HOME/theos/sdks"
          ln -sf "$SDK_PATH" "$HOME/theos/sdks/$(basename "$SDK_PATH")"
          ln -sf "$SDK_PATH" "$HOME/theos/sdks/iPhoneOS.sdk"

      - name: Install Theos submodules (safety)
        run: |
          cd $HOME/theos
          git submodule update --init --recursive

      - name: Locate project directory
        id: find-project
        run: |
          if [[ -f Makefile ]]; then
            echo "dir=." >> "$GITHUB_OUTPUT"
          else
            DIR=$(find . -name Makefile -maxdepth 2 -not -path './.git/*' -exec dirname {} \; | head -n1)
            echo "dir=$DIR" >> "$GITHUB_OUTPUT"
          fi

      - name: Setup Python for tests
        if: ${{ hashFiles('tests/**/*.py') != '' }}
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install test deps
        if: ${{ hashFiles('tests/**/*.py') != '' }}
        run: |
          python -m pip install --upgrade pip
          pip install pytest

      - name: Run unit tests
        if: ${{ hashFiles('tests/**/*.py') != '' }}
        run: |
          pytest -q

      - name: Build tweak
        working-directory: ${{ steps.find-project.outputs.dir }}
        run: make clean package FINALPACKAGE=1

      - name: Extract dylib
        working-directory: ${{ steps.find-project.outputs.dir }}
        run: |
          mkdir -p out
          DEB=$(ls packages/*.deb | head -n1)
          dpkg-deb -x "$DEB" extract
          cp extract/Library/MobileSubstrate/DynamicLibraries/*.dylib out/
          cp *.plist out/ || true

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: TTTranslateKit-artifact
          path: ${{ steps.find-project.outputs.dir }}/out/*

      - name: Create release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ steps.find-project.outputs.dir }}/out/*
